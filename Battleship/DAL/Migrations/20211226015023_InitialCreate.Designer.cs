// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211226015023_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Coordinate", b =>
                {
                    b.Property<int>("CoordinateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("CoordinateId");

                    b.HasIndex("ShipId");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("Domain.GameBoard", b =>
                {
                    b.Property<int>("GameBoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Board")
                        .IsRequired()
                        .HasMaxLength(21000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SavedGameId")
                        .HasColumnType("int");

                    b.HasKey("GameBoardId");

                    b.HasIndex("SavedGameId");

                    b.ToTable("GameBoards");
                });

            modelBuilder.Entity("Domain.GameConfig", b =>
                {
                    b.Property<int>("GameConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoardSizeX")
                        .HasColumnType("int");

                    b.Property<int>("BoardSizeY")
                        .HasColumnType("int");

                    b.Property<int>("EShipTouchRule")
                        .HasColumnType("int");

                    b.Property<string>("GameConfigName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("GameConfigId");

                    b.ToTable("GameConfigs");
                });

            modelBuilder.Entity("Domain.SavedGame", b =>
                {
                    b.Property<int>("SavedGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentPlayerNo")
                        .HasColumnType("int");

                    b.Property<int>("GameConfigId")
                        .HasColumnType("int");

                    b.Property<string>("SavedGameName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("SavedGameId");

                    b.HasIndex("GameConfigId");

                    b.ToTable("SavedGames");
                });

            modelBuilder.Entity("Domain.Ship", b =>
                {
                    b.Property<int>("ShipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameBoardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ShipId");

                    b.HasIndex("GameBoardId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("Domain.ShipConfig", b =>
                {
                    b.Property<int>("ShipConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameConfigId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShipSizeX")
                        .HasColumnType("int");

                    b.Property<int>("ShipSizeY")
                        .HasColumnType("int");

                    b.HasKey("ShipConfigId");

                    b.HasIndex("GameConfigId");

                    b.ToTable("ShipConfigs");
                });

            modelBuilder.Entity("Domain.Coordinate", b =>
                {
                    b.HasOne("Domain.Ship", "Ship")
                        .WithMany("Coordinates")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Domain.GameBoard", b =>
                {
                    b.HasOne("Domain.SavedGame", "SavedGame")
                        .WithMany("GameBoards")
                        .HasForeignKey("SavedGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavedGame");
                });

            modelBuilder.Entity("Domain.SavedGame", b =>
                {
                    b.HasOne("Domain.GameConfig", "GameConfig")
                        .WithMany("SavedGames")
                        .HasForeignKey("GameConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameConfig");
                });

            modelBuilder.Entity("Domain.Ship", b =>
                {
                    b.HasOne("Domain.GameBoard", "GameBoard")
                        .WithMany("Ships")
                        .HasForeignKey("GameBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameBoard");
                });

            modelBuilder.Entity("Domain.ShipConfig", b =>
                {
                    b.HasOne("Domain.GameConfig", "GameConfig")
                        .WithMany("ShipConfigs")
                        .HasForeignKey("GameConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameConfig");
                });

            modelBuilder.Entity("Domain.GameBoard", b =>
                {
                    b.Navigation("Ships");
                });

            modelBuilder.Entity("Domain.GameConfig", b =>
                {
                    b.Navigation("SavedGames");

                    b.Navigation("ShipConfigs");
                });

            modelBuilder.Entity("Domain.SavedGame", b =>
                {
                    b.Navigation("GameBoards");
                });

            modelBuilder.Entity("Domain.Ship", b =>
                {
                    b.Navigation("Coordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
